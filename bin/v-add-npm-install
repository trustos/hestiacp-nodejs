#!/bin/bash
# info: run npm install for NodeJS application
# options: USER DOMAIN
#
# example: v-run-npm-install admin wonderland.com
#
# This function runs npm install for a NodeJS application
#----------------------------------------------------------#
#                Variables & Functions                     #
#----------------------------------------------------------#

# Argument definition
user=$1
domain=$2

# Includes
source /etc/hestiacp/hestia.conf
source $HESTIA/func/main.sh
source $HESTIA/func/domain.sh
source_conf "$HESTIA/conf/hestia.conf"

# Additional argument formatting
format_domain

#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '2' "$#" 'USER DOMAIN'
is_format_valid 'user' 'domain'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"

is_dir_symlink "$HOMEDIR/$user/web"
is_dir_symlink "$HOMEDIR/$user/web/$domain"

is_base_domain_owner "$domain"

# Perform verification if read-only mode is enabled
check_hestia_demo_mode

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Change to the application directory
app_dir="$HOMEDIR/$user/web/$domain/private/nodeapp"
if [ ! -d "$app_dir" ]; then
    $BIN/v-log-action "$user" "Error" "Web" "NodeJS application directory not found for $domain."
    exit 1
fi

# Source NVM for the user
export NVM_DIR="$HOMEDIR/$user/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# Read the .nvmrc file to get the Node.js version
if [ ! -f "$app_dir/.nvmrc" ]; then
    $BIN/v-log-action "$user" "Error" "Web" ".nvmrc file not found for $domain."
    exit 1
fi

# Use the specified Node.js version (this will automatically read from .nvmrc)
if ! nvm use; then
    $BIN/v-log-action "$user" "Error" "Web" "Failed to switch to Node.js version specified in .nvmrc for $domain."
    exit 1
fi

# Get the current Node.js version for logging
node_version=$(node -v)

# Clear npm cache
if ! sudo -u $user bash -c "cd $app_dir && npm cache clean --force"; then
    $BIN/v-log-action "$user" "Warning" "Web" "Failed to clear npm cache for $domain."
fi

# Run npm ci (or npm install if package-lock.json doesn't exist)
if [ -f "$app_dir/package-lock.json" ]; then
    install_command="npm ci"
else
    install_command="npm install"
fi

if sudo -u $user bash -c "cd $app_dir && $install_command"; then
    $BIN/v-log-action "$user" "Info" "Web" "Successfully ran $install_command for $domain using Node.js $node_version."
else
    $BIN/v-log-action "$user" "Error" "Web" "Failed to run $install_command for $domain."
    exit 1
fi

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

# Logging
$BIN/v-log-action "$user" "Info" "Web" "Ran npm install/ci for NodeJS application (Domain: $domain, Node.js: $node_version)."

# Debug logging
echo "Debug: About to call log_event" >&2
echo "Debug: OK=$OK" >&2
echo "Debug: ARGUMENTS=$ARGUMENTS" >&2

# Try to use log_event, but continue even if it fails
log_event "$OK" "$ARGUMENTS" || echo "Debug: log_event failed" >&2

exit
