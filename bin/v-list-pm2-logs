#!/bin/bash
# info: list PM2 logs for a user
# options: USER [LINES]
#
# example: v-list-pm2-logs admin 100
#
# This function retrieves the PM2 logs for all domains of a specific user

user=$1
lines=${2:-100}

echo "PM2 Logs Diagnostic"
echo "User: $user"
echo "Lines: $lines"

# Function to run command as user
run_as_user() {
    sudo -u "$user" bash -c "$1"
}

# Check if PM2 is installed
pm2_path=$(run_as_user "which pm2")
if [ -z "$pm2_path" ]; then
    echo "PM2 is not in PATH, checking NVM..."
    pm2_path=$(run_as_user "[ -s \"\$HOME/.nvm/nvm.sh\" ] && . \"\$HOME/.nvm/nvm.sh\" && which pm2")
    if [ -z "$pm2_path" ]; then
        echo "PM2 is not installed or not in PATH for user $user"
        exit 0
    fi
    echo "PM2 found in NVM: $pm2_path"
    nvm_prefix="[ -s \"\$HOME/.nvm/nvm.sh\" ] && . \"\$HOME/.nvm/nvm.sh\" &&"
else
    echo "PM2 found in PATH: $pm2_path"
    nvm_prefix=""
fi

# List PM2 processes
echo "PM2 processes:"
pm2_list=$(run_as_user "${nvm_prefix} pm2 list")
if [ -n "$pm2_list" ]; then
    echo "$pm2_list"
else
    echo "No PM2 processes found"
fi

# Get PM2 logs
echo "PM2 logs:"
logs=$(run_as_user "${nvm_prefix} pm2 logs --lines $lines --nostream --raw")

if [ -n "$logs" ]; then
    echo "$logs"
else
    echo "No PM2 logs available for user $user"
fi

echo "Script execution completed"
exit 0
